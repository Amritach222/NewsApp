{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactCourse\\\\newsapp\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component'; //* document.title=`NewsMonkey-${capitalizeFirstLetter(props.category)}`;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalresults] = useState(0);\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const updateNews = async () => {\n    props.setProgress(10); // this.setState({loading:true})\n\n    setLoading(true);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url); // it' s a promise the method is wating for the rsponse either failure or success \n\n    let parsedData = await data.json();\n    props.setProgress(0);\n    setArticles(parsedData.articles);\n    setTotalresults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  useEffect(() => {\n    document.title = `NewsMonkey-${capitalizeFirstLetter(props.category)}`;\n    updateNews(); // eslint-disable-next-line\n  }, []); // eslint-disable-next-line\n  // const componentDidMount= async()=>{// it is lifecycle method/ it runs after render() method\n  //    updateNews();\n  // }\n  //     const handleNextClick= async ()=>{\n  //         // eslint-disable-next-line\n  //     setPage(page+1);\n  //     updateNews()\n  //     }\n  //    const handlePreviousClick= async ()=>{\n  //        // eslint-disable-next-line\n  //         setPage(page-1);\n  //          updateNews()\n  //     }\n\n  const fetchMoreData = async () => {\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url); // it' s a promise the method is wating for the rsponse either failure or success \n\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalresults(parsedData.totalResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        marginTop: '90px'\n      },\n      children: [\"NewsMonkey - Top Headlines from \", capitalizeFirstLetter(props.category)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this),\n      scrollableTarget: \"scrollableDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: articles.map(elements => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: elements.title ? elements.title.slice(0, 45) : \"\",\n                description: elements.description ? elements.description.slice(0, 88) : \"\",\n                imageUrl: elements.urlToImage,\n                newsUrl: elements.url,\n                author: elements.author,\n                date: elements.publishedAt,\n                source: elements.source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, elements.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"+6Tp2qsqoKs0fjauPyYi2eDZ4T4=\");\n\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/DELL/Documents/ReactCourse/newsapp/src/components/News.js"],"names":["React","useState","useEffect","NewsItem","Spinner","PropTypes","InfiniteScroll","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalresults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","document","title","fetchMoreData","concat","marginTop","length","map","elements","description","urlToImage","author","publishedAt","source","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n//* document.title=`NewsMonkey-${capitalizeFirstLetter(props.category)}`;\r\nconst News=(props)=> {\r\n    const [articles, setArticles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [totalResults, setTotalresults] = useState(0);\r\n\r\n   const capitalizeFirstLetter=(string)=>{\r\n        return string.charAt(0).toUpperCase()+string.slice(1);\r\n    }\r\n   \r\n    const  updateNews=async ()=>{\r\n        props.setProgress(10)\r\n        // this.setState({loading:true})\r\n        setLoading(true);\r\n        let url=`https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n        let data= await fetch(url);// it' s a promise the method is wating for the rsponse either failure or success \r\n        let parsedData= await data.json();\r\n        props.setProgress(0);\r\n        setArticles(parsedData.articles);\r\n        setTotalresults(parsedData.totalResults);\r\n        setLoading(false);\r\n        props.setProgress(100);\r\n    }\r\n    useEffect(() => {\r\n        document.title=`NewsMonkey-${capitalizeFirstLetter(props.category)}`;\r\n        updateNews();\r\n        // eslint-disable-next-line\r\n    \r\n    }, []);\r\n    // eslint-disable-next-line\r\n    // const componentDidMount= async()=>{// it is lifecycle method/ it runs after render() method\r\n    //    updateNews();\r\n\r\n    // }\r\n//     const handleNextClick= async ()=>{\r\n//         // eslint-disable-next-line\r\n//     setPage(page+1);\r\n//     updateNews()\r\n//     }\r\n//    const handlePreviousClick= async ()=>{\r\n//        // eslint-disable-next-line\r\n//         setPage(page-1);\r\n//          updateNews()\r\n//     }\r\n    const fetchMoreData= async()=>{\r\n       \r\n        let url=`https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\r\n        setPage(page+1);\r\n        let data= await fetch(url);// it' s a promise the method is wating for the rsponse either failure or success \r\n        let parsedData= await data.json();\r\n        setArticles(articles.concat(parsedData.articles))\r\n        setTotalresults(parsedData.totalResults)\r\n\r\n    }\r\n        \r\n        return (\r\n            <>\r\n            <h1 className=\"text-center\" style={{marginTop:'90px'}}>NewsMonkey - Top Headlines from {capitalizeFirstLetter(props.category)}</h1>\r\n           {loading && <Spinner/> } {/* This state that if the loading is true then show spinner  */}\r\n           <InfiniteScroll\r\n           dataLength={articles.length}\r\n           next={fetchMoreData}\r\n           hasMore={articles.length!==totalResults}\r\n           loader={<Spinner/>}\r\n           scrollableTarget=\"scrollableDiv\"\r\n       >\r\n                <div className=\"container\">\r\n                <div className=\"row \">\r\n                {articles.map((elements)=>{\r\n                    return <div className=\"col-md-4\" key={elements.url}>\r\n                    <NewsItem title={elements.title?elements.title.slice(0,45):\"\"} description={elements.description?elements.description.slice(0,88):\"\"} \r\n                    imageUrl={elements.urlToImage} newsUrl={elements.url} author={elements.author} date={elements.publishedAt} source={elements.source}/>\r\n                </div>\r\n        \r\n                })}\r\n                </div>\r\n                </div>\r\n                </InfiniteScroll>\r\n                {/*<div className=\"container d-flex justify-content-between\" >\r\n                <button type=\"button\" disabled={this.state.page<=1} className=\"btn btn-dark \" onClick={this.handlePreviousClick}> &laquo; Previous</button>\r\n                <button type=\"button\" disabled={this.state.page+1> Math.ceil(this.state.totalResults/ props.pageSize)} className=\"btn btn-dark \" onClick={this.handleNextClick}>Next &raquo;</button>\r\n            </div>*/}\r\n            </>\r\n\r\n            \r\n        )\r\n    }\r\n    News.defaultProps={\r\n        country:'in',\r\n        pageSize:8,\r\n        category:'general'\r\n    }\r\n    News.propTypes={\r\n        country:PropTypes.string,\r\n        pageSize:PropTypes.number,\r\n        category:PropTypes.string\r\n    \r\n}\r\n\r\nexport default News\r\n"]},"metadata":{},"sourceType":"module"}