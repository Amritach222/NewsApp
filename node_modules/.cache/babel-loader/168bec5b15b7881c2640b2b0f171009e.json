{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\ReactCourse\\\\newsapp\\\\src\\\\components\\\\News.js\";\nimport React, { Component } from 'react';\nimport NewsItem from './NewsItem';\nimport Spinner from './Spinner';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class News extends Component {\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleNextClick = async () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n      this.updateNews();\n    };\n\n    this.handlePreviousClick = async () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n      this.updateNews();\n    };\n\n    this.fetchMoreData = () => {\n      this.setState({\n        page: this.state.page + 1\n      });\n      this.updateNews();\n    };\n\n    this.state = {\n      articles: [],\n      loading: false,\n      page: 1,\n      totalResults: 0\n    };\n    document.title = `NewsMonkey-${this.capitalizeFirstLetter(this.props.category)}`;\n  }\n\n  async updateNews() {\n    this.setState({\n      loading: true\n    });\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=7a62fb1796d84c898f39d25146f0ea69&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n    let data = await fetch(url); // it' s a promise the method is wating for the rsponse either failure or success \n\n    let parsedData = await data.json();\n    console.log(parsedData);\n    this.setState({\n      articles: parsedData.articles,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  }\n\n  async componentDidMount() {\n    // it is lifecycle method/ it runs after render() method\n    this.updateNews();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        style: {\n          margin: '40px'\n        },\n        children: [\"NewsMonkey - Top Headlines from \", this.capitalizeFirstLetter(this.props.category)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: this.state.articles.map(elements => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: elements.title ? elements.title.slice(0, 45) : \"\",\n              description: elements.description ? elements.description.slice(0, 88) : \"\",\n              imageUrl: elements.urlToImage,\n              newsUrl: elements.url,\n              author: elements.author,\n              date: elements.publishedAt,\n              source: elements.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, elements.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: this.state.articles.length,\n        next: this.fetchMoreData,\n        style: {\n          display: 'flex',\n          flexDirection: 'column-reverse'\n        } //To put endMessage and loader to the top.\n        ,\n        inverse: true //\n        ,\n        hasMore: this.state.articles.length !== this.state.totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this),\n        scrollableTarget: \"scrollableDiv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: this.state.page <= 1,\n          className: \"btn btn-dark \",\n          onClick: this.handlePreviousClick,\n          children: \" \\xAB Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: this.state.page + 1 > Math.ceil(this.state.totalResults / this.props.pageSize),\n          className: \"btn btn-dark \",\n          onClick: this.handleNextClick,\n          children: \"Next \\xBB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;","map":{"version":3,"sources":["C:/Users/DELL/Documents/ReactCourse/newsapp/src/components/News.js"],"names":["React","Component","NewsItem","Spinner","PropTypes","InfiniteScroll","News","capitalizeFirstLetter","string","charAt","toUpperCase","slice","constructor","props","handleNextClick","setState","page","state","updateNews","handlePreviousClick","fetchMoreData","articles","loading","totalResults","document","title","category","url","country","pageSize","data","fetch","parsedData","json","console","log","componentDidMount","render","margin","map","elements","description","urlToImage","author","publishedAt","source","length","display","flexDirection","Math","ceil","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\nexport class News extends Component {\r\n    capitalizeFirstLetter(string){\r\n        return string.charAt(0).toUpperCase()+string.slice(1);\r\n    }\r\n   \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            articles:[],\r\n            loading:false,\r\n            page:1,\r\n            totalResults:0\r\n        }\r\n        document.title=`NewsMonkey-${this.capitalizeFirstLetter(this.props.category)}`;\r\n    }\r\n    async updateNews(){\r\n        this.setState({loading:true})\r\n        let url=`https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=7a62fb1796d84c898f39d25146f0ea69&page=${this.state.page}&pageSize=${this.props.pageSize}`;\r\n        let data= await fetch(url);// it' s a promise the method is wating for the rsponse either failure or success \r\n        let parsedData= await data.json();\r\n        console.log(parsedData);\r\n        this.setState({articles: parsedData.articles,\r\n            totalResults:parsedData.totalResults,\r\n            loading:false\r\n        })\r\n    }\r\n    async componentDidMount(){// it is lifecycle method/ it runs after render() method\r\n       this.updateNews();\r\n\r\n    }\r\n     handleNextClick= async ()=>{\r\n    \r\n    this.setState({page:this.state.page+1});\r\n    this.updateNews()\r\n    }\r\n    handlePreviousClick= async ()=>{\r\n        this.setState({page:this.state.page+1});\r\n         this.updateNews()\r\n    }\r\n    fetchMoreData=()=>{\r\n        this.setState({page:this.state.page+1});\r\n         this.updateNews()\r\n\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container my-3\">\r\n            <h1 className=\"text-center\" style={{margin:'40px'}}>NewsMonkey - Top Headlines from {this.capitalizeFirstLetter(this.props.category)}</h1>\r\n           {/*{ this.state.loading && <Spinner/> }*/} {/* This state that if the loading is true then show spinner  */}\r\n                <div className=\"row \">\r\n                {this.state.articles.map((elements)=>{\r\n                    return <div className=\"col-md-4\" key={elements.url}>\r\n                    <NewsItem title={elements.title?elements.title.slice(0,45):\"\"} description={elements.description?elements.description.slice(0,88):\"\"} \r\n                    imageUrl={elements.urlToImage} newsUrl={elements.url} author={elements.author} date={elements.publishedAt} source={elements.source}/>\r\n                </div>\r\n                })}\r\n                </div>\r\n                <InfiniteScroll\r\n                dataLength={this.state.articles.length}\r\n                next={this.fetchMoreData}\r\n                style={{ display: 'flex', flexDirection: 'column-reverse' }} //To put endMessage and loader to the top.\r\n                inverse={true} //\r\n                hasMore={this.state.articles.length!==this.state.totalResults}\r\n                loader={<Spinner/>}\r\n                scrollableTarget=\"scrollableDiv\"\r\n            >\r\n                </InfiniteScroll>\r\n                <div className=\"container d-flex justify-content-between\" >\r\n                <button type=\"button\" disabled={this.state.page<=1} className=\"btn btn-dark \" onClick={this.handlePreviousClick}> &laquo; Previous</button>\r\n                <button type=\"button\" disabled={this.state.page+1> Math.ceil(this.state.totalResults/ this.props.pageSize)} className=\"btn btn-dark \" onClick={this.handleNextClick}>Next &raquo;</button>\r\n                </div>\r\n           \r\n            \r\n            </div>\r\n            \r\n        )\r\n    }\r\n    static defaultProps={\r\n        country:'in',\r\n        pageSize:8,\r\n        category:'general'\r\n    }\r\n    static propTypes={\r\n        country:PropTypes.string,\r\n        pageSize:PropTypes.number,\r\n        category:PropTypes.string\r\n    }\r\n}\r\n\r\nexport default News\r\n"]},"metadata":{},"sourceType":"module"}