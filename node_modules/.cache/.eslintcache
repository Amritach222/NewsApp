[{"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\index.js":"1","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\App.js":"2","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\News.js":"4","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\NewsItem.js":"5","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\Spinner.js":"6","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\Navbar.js":"7"},{"size":500,"mtime":1630102978000,"results":"8","hashOfConfig":"9"},{"size":1923,"mtime":1635328206895,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1630102978000,"results":"11","hashOfConfig":"9"},{"size":4433,"mtime":1648283923740,"results":"12","hashOfConfig":"9"},{"size":1146,"mtime":1635320587090,"results":"13","hashOfConfig":"9"},{"size":285,"mtime":1635328245419,"results":"14","hashOfConfig":"9"},{"size":2080,"mtime":1635328443659,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e9d969",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\index.js",[],"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\App.js",[],"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\News.js",["31"],"import React, { useState , useEffect} from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Spinner from './Spinner';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n//* document.title=`NewsMonkey-${capitalizeFirstLetter(props.category)}`;\r\nconst News=(props)=> {\r\n    const [articles, setArticles] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [totalResults, setTotalresults] = useState(0);\r\n\r\n   const capitalizeFirstLetter=(string)=>{\r\n        return string.charAt(0).toUpperCase()+string.slice(1);\r\n    }\r\n   \r\n    const  updateNews=async ()=>{\r\n        props.setProgress(10)\r\n        // this.setState({loading:true})\r\n        setLoading(true);\r\n        let url=`https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n        let data= await fetch(url);// it' s a promise the method is wating for the rsponse either failure or success \r\n        let parsedData= await data.json();\r\n        props.setProgress(0);\r\n        setArticles(parsedData.articles);\r\n        setTotalresults(parsedData.totalResults);\r\n        setLoading(false);\r\n        props.setProgress(100);\r\n    }\r\n    useEffect(() => {\r\n        document.title=`NewsMonkey-${capitalizeFirstLetter(props.category)}`;\r\n        updateNews();\r\n        // eslint-disable-next-line\r\n    \r\n    }, []);\r\n    // eslint-disable-next-line\r\n    // const componentDidMount= async()=>{// it is lifecycle method/ it runs after render() method\r\n    //    updateNews();\r\n\r\n    // }\r\n//     const handleNextClick= async ()=>{\r\n//         // eslint-disable-next-line\r\n//     setPage(page+1);\r\n//     updateNews()\r\n//     }\r\n//    const handlePreviousClick= async ()=>{\r\n//        // eslint-disable-next-line\r\n//         setPage(page-1);\r\n//          updateNews()\r\n//     }\r\n    const fetchMoreData= async()=>{\r\n       \r\n        let url=`https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=${props.pageSize}`;\r\n        setPage(page+1);\r\n        let data= await fetch(url);// it' s a promise the method is wating for the rsponse either failure or success \r\n        let parsedData= await data.json();\r\n        setArticles(articles.concat(parsedData.articles))\r\n        setTotalresults(parsedData.totalResults)\r\n\r\n    }\r\n        \r\n        return (\r\n            <>\r\n            <h1 className=\"text-center\" style={{marginTop:'90px'}}>NewsMonkey - Top Headlines from {capitalizeFirstLetter(props.category)}</h1>\r\n           {loading && <Spinner/> } {/* This state that if the loading is true then show spinner  */}\r\n           <InfiniteScroll\r\n           dataLength={articles.length}\r\n           next={fetchMoreData}\r\n           hasMore={articles.length!==totalResults}\r\n           loader={<Spinner/>}\r\n           scrollableTarget=\"scrollableDiv\"\r\n       >\r\n                <div className=\"container\">\r\n                <div className=\"row \">\r\n                {articles.map((elements)=>{\r\n                    return <div className=\"col-md-4\" key={elements.url}>\r\n                    <NewsItem title={elements.title?elements.title.slice(0,45):\"\"} description={elements.description?elements.description.slice(0,88):\"\"} \r\n                    imageUrl={elements.urlToImage} newsUrl={elements.url} author={elements.author} date={elements.publishedAt} source={elements.source}/>\r\n                </div>\r\n        \r\n                })}\r\n                </div>\r\n                </div>\r\n                </InfiniteScroll>\r\n                {/*<div className=\"container d-flex justify-content-between\" >\r\n                <button type=\"button\" disabled={this.state.page<=1} className=\"btn btn-dark \" onClick={this.handlePreviousClick}> &laquo; Previous</button>\r\n                <button type=\"button\" disabled={this.state.page+1> Math.ceil(this.state.totalResults/ props.pageSize)} className=\"btn btn-dark \" onClick={this.handleNextClick}>Next &raquo;</button>\r\n            </div>*/}\r\n            </>\r\n\r\n            \r\n        )\r\n    }\r\n    News.defaultProps={\r\n        country:'in',\r\n        pageSize:8,\r\n        category:'general'\r\n    }\r\n    News.propTypes={\r\n        country:PropTypes.string,\r\n        pageSize:PropTypes.number,\r\n        category:PropTypes.string\r\n    \r\n}\r\n\r\nexport default News\r\n","C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\NewsItem.js",[],"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\Spinner.js",[],"C:\\Users\\DELL\\Documents\\ReactCourse\\newsapp\\src\\components\\Navbar.js",[],{"ruleId":"32","severity":1,"message":"33","line":36,"column":8,"nodeType":"34","endLine":36,"endColumn":10,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.category' and 'updateNews'. Either include them or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [props.category, updateNews]",{"range":"39","text":"40"},[1480,1482],"[props.category, updateNews]"]